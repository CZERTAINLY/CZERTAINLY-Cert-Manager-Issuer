/*
CZERTAINLY Cert Manager

REST API for implementations of cert-manager issuer

API version: 2.14.2-SNAPSHOT
Contact: info@czertainly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package czertainly

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ApprovalDetailDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalDetailDto{}

// ApprovalDetailDto struct for ApprovalDetailDto
type ApprovalDetailDto struct {
	// UUID of the Approval
	ApprovalUuid string `json:"approvalUuid"`
	// UUID of the user that requested approval
	CreatorUuid string `json:"creatorUuid"`
	// Username of the user that requested approval
	CreatorUsername *string `json:"creatorUsername,omitempty"`
	// Version of the Approval profile
	Version int32 `json:"version"`
	// Creation date of the Approval
	CreatedAt time.Time `json:"createdAt"`
	// Expiry date of the Approval
	ExpiryAt time.Time `json:"expiryAt"`
	// Date of resolution of the Approval
	ClosedAt *time.Time `json:"closedAt,omitempty"`
	// Status of the Approval
	Status string `json:"status"`
	// Resource of the Approval
	Resource Resource `json:"resource"`
	// Resource action of the Approval
	ResourceAction string `json:"resourceAction"`
	// UUID of the target object of the Approval
	ObjectUuid string `json:"objectUuid"`
	// Name of the Approval profile
	ApprovalProfileName string `json:"approvalProfileName"`
	// UUID of the Approval profile
	ApprovalProfileUuid string `json:"approvalProfileUuid"`
	// Expiration in hours
	Expiry int32 `json:"expiry"`
	// Description of the Approval
	Description *string `json:"description,omitempty"`
	// List of Approval steps related to this Approval
	ApprovalSteps []ApprovalDetailStepDto `json:"approvalSteps"`
	AdditionalProperties map[string]interface{}
}

type _ApprovalDetailDto ApprovalDetailDto

// NewApprovalDetailDto instantiates a new ApprovalDetailDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalDetailDto(approvalUuid string, creatorUuid string, version int32, createdAt time.Time, expiryAt time.Time, status string, resource Resource, resourceAction string, objectUuid string, approvalProfileName string, approvalProfileUuid string, expiry int32, approvalSteps []ApprovalDetailStepDto) *ApprovalDetailDto {
	this := ApprovalDetailDto{}
	this.ApprovalUuid = approvalUuid
	this.CreatorUuid = creatorUuid
	this.Version = version
	this.CreatedAt = createdAt
	this.ExpiryAt = expiryAt
	this.Status = status
	this.Resource = resource
	this.ResourceAction = resourceAction
	this.ObjectUuid = objectUuid
	this.ApprovalProfileName = approvalProfileName
	this.ApprovalProfileUuid = approvalProfileUuid
	this.Expiry = expiry
	this.ApprovalSteps = approvalSteps
	return &this
}

// NewApprovalDetailDtoWithDefaults instantiates a new ApprovalDetailDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalDetailDtoWithDefaults() *ApprovalDetailDto {
	this := ApprovalDetailDto{}
	return &this
}

// GetApprovalUuid returns the ApprovalUuid field value
func (o *ApprovalDetailDto) GetApprovalUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApprovalUuid
}

// GetApprovalUuidOk returns a tuple with the ApprovalUuid field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetApprovalUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApprovalUuid, true
}

// SetApprovalUuid sets field value
func (o *ApprovalDetailDto) SetApprovalUuid(v string) {
	o.ApprovalUuid = v
}

// GetCreatorUuid returns the CreatorUuid field value
func (o *ApprovalDetailDto) GetCreatorUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatorUuid
}

// GetCreatorUuidOk returns a tuple with the CreatorUuid field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetCreatorUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorUuid, true
}

// SetCreatorUuid sets field value
func (o *ApprovalDetailDto) SetCreatorUuid(v string) {
	o.CreatorUuid = v
}

// GetCreatorUsername returns the CreatorUsername field value if set, zero value otherwise.
func (o *ApprovalDetailDto) GetCreatorUsername() string {
	if o == nil || IsNil(o.CreatorUsername) {
		var ret string
		return ret
	}
	return *o.CreatorUsername
}

// GetCreatorUsernameOk returns a tuple with the CreatorUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetCreatorUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorUsername) {
		return nil, false
	}
	return o.CreatorUsername, true
}

// HasCreatorUsername returns a boolean if a field has been set.
func (o *ApprovalDetailDto) HasCreatorUsername() bool {
	if o != nil && !IsNil(o.CreatorUsername) {
		return true
	}

	return false
}

// SetCreatorUsername gets a reference to the given string and assigns it to the CreatorUsername field.
func (o *ApprovalDetailDto) SetCreatorUsername(v string) {
	o.CreatorUsername = &v
}

// GetVersion returns the Version field value
func (o *ApprovalDetailDto) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ApprovalDetailDto) SetVersion(v int32) {
	o.Version = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ApprovalDetailDto) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ApprovalDetailDto) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetExpiryAt returns the ExpiryAt field value
func (o *ApprovalDetailDto) GetExpiryAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiryAt
}

// GetExpiryAtOk returns a tuple with the ExpiryAt field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetExpiryAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiryAt, true
}

// SetExpiryAt sets field value
func (o *ApprovalDetailDto) SetExpiryAt(v time.Time) {
	o.ExpiryAt = v
}

// GetClosedAt returns the ClosedAt field value if set, zero value otherwise.
func (o *ApprovalDetailDto) GetClosedAt() time.Time {
	if o == nil || IsNil(o.ClosedAt) {
		var ret time.Time
		return ret
	}
	return *o.ClosedAt
}

// GetClosedAtOk returns a tuple with the ClosedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetClosedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClosedAt) {
		return nil, false
	}
	return o.ClosedAt, true
}

// HasClosedAt returns a boolean if a field has been set.
func (o *ApprovalDetailDto) HasClosedAt() bool {
	if o != nil && !IsNil(o.ClosedAt) {
		return true
	}

	return false
}

// SetClosedAt gets a reference to the given time.Time and assigns it to the ClosedAt field.
func (o *ApprovalDetailDto) SetClosedAt(v time.Time) {
	o.ClosedAt = &v
}

// GetStatus returns the Status field value
func (o *ApprovalDetailDto) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ApprovalDetailDto) SetStatus(v string) {
	o.Status = v
}

// GetResource returns the Resource field value
func (o *ApprovalDetailDto) GetResource() Resource {
	if o == nil {
		var ret Resource
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetResourceOk() (*Resource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *ApprovalDetailDto) SetResource(v Resource) {
	o.Resource = v
}

// GetResourceAction returns the ResourceAction field value
func (o *ApprovalDetailDto) GetResourceAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceAction
}

// GetResourceActionOk returns a tuple with the ResourceAction field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetResourceActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceAction, true
}

// SetResourceAction sets field value
func (o *ApprovalDetailDto) SetResourceAction(v string) {
	o.ResourceAction = v
}

// GetObjectUuid returns the ObjectUuid field value
func (o *ApprovalDetailDto) GetObjectUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectUuid
}

// GetObjectUuidOk returns a tuple with the ObjectUuid field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetObjectUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectUuid, true
}

// SetObjectUuid sets field value
func (o *ApprovalDetailDto) SetObjectUuid(v string) {
	o.ObjectUuid = v
}

// GetApprovalProfileName returns the ApprovalProfileName field value
func (o *ApprovalDetailDto) GetApprovalProfileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApprovalProfileName
}

// GetApprovalProfileNameOk returns a tuple with the ApprovalProfileName field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetApprovalProfileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApprovalProfileName, true
}

// SetApprovalProfileName sets field value
func (o *ApprovalDetailDto) SetApprovalProfileName(v string) {
	o.ApprovalProfileName = v
}

// GetApprovalProfileUuid returns the ApprovalProfileUuid field value
func (o *ApprovalDetailDto) GetApprovalProfileUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApprovalProfileUuid
}

// GetApprovalProfileUuidOk returns a tuple with the ApprovalProfileUuid field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetApprovalProfileUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApprovalProfileUuid, true
}

// SetApprovalProfileUuid sets field value
func (o *ApprovalDetailDto) SetApprovalProfileUuid(v string) {
	o.ApprovalProfileUuid = v
}

// GetExpiry returns the Expiry field value
func (o *ApprovalDetailDto) GetExpiry() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetExpiryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expiry, true
}

// SetExpiry sets field value
func (o *ApprovalDetailDto) SetExpiry(v int32) {
	o.Expiry = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApprovalDetailDto) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApprovalDetailDto) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApprovalDetailDto) SetDescription(v string) {
	o.Description = &v
}

// GetApprovalSteps returns the ApprovalSteps field value
func (o *ApprovalDetailDto) GetApprovalSteps() []ApprovalDetailStepDto {
	if o == nil {
		var ret []ApprovalDetailStepDto
		return ret
	}

	return o.ApprovalSteps
}

// GetApprovalStepsOk returns a tuple with the ApprovalSteps field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailDto) GetApprovalStepsOk() ([]ApprovalDetailStepDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApprovalSteps, true
}

// SetApprovalSteps sets field value
func (o *ApprovalDetailDto) SetApprovalSteps(v []ApprovalDetailStepDto) {
	o.ApprovalSteps = v
}

func (o ApprovalDetailDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalDetailDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["approvalUuid"] = o.ApprovalUuid
	toSerialize["creatorUuid"] = o.CreatorUuid
	if !IsNil(o.CreatorUsername) {
		toSerialize["creatorUsername"] = o.CreatorUsername
	}
	toSerialize["version"] = o.Version
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["expiryAt"] = o.ExpiryAt
	if !IsNil(o.ClosedAt) {
		toSerialize["closedAt"] = o.ClosedAt
	}
	toSerialize["status"] = o.Status
	toSerialize["resource"] = o.Resource
	toSerialize["resourceAction"] = o.ResourceAction
	toSerialize["objectUuid"] = o.ObjectUuid
	toSerialize["approvalProfileName"] = o.ApprovalProfileName
	toSerialize["approvalProfileUuid"] = o.ApprovalProfileUuid
	toSerialize["expiry"] = o.Expiry
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["approvalSteps"] = o.ApprovalSteps

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApprovalDetailDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"approvalUuid",
		"creatorUuid",
		"version",
		"createdAt",
		"expiryAt",
		"status",
		"resource",
		"resourceAction",
		"objectUuid",
		"approvalProfileName",
		"approvalProfileUuid",
		"expiry",
		"approvalSteps",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApprovalDetailDto := _ApprovalDetailDto{}

	err = json.Unmarshal(data, &varApprovalDetailDto)

	if err != nil {
		return err
	}

	*o = ApprovalDetailDto(varApprovalDetailDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "approvalUuid")
		delete(additionalProperties, "creatorUuid")
		delete(additionalProperties, "creatorUsername")
		delete(additionalProperties, "version")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "expiryAt")
		delete(additionalProperties, "closedAt")
		delete(additionalProperties, "status")
		delete(additionalProperties, "resource")
		delete(additionalProperties, "resourceAction")
		delete(additionalProperties, "objectUuid")
		delete(additionalProperties, "approvalProfileName")
		delete(additionalProperties, "approvalProfileUuid")
		delete(additionalProperties, "expiry")
		delete(additionalProperties, "description")
		delete(additionalProperties, "approvalSteps")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApprovalDetailDto struct {
	value *ApprovalDetailDto
	isSet bool
}

func (v NullableApprovalDetailDto) Get() *ApprovalDetailDto {
	return v.value
}

func (v *NullableApprovalDetailDto) Set(val *ApprovalDetailDto) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalDetailDto) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalDetailDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalDetailDto(val *ApprovalDetailDto) *NullableApprovalDetailDto {
	return &NullableApprovalDetailDto{value: val, isSet: true}
}

func (v NullableApprovalDetailDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalDetailDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


