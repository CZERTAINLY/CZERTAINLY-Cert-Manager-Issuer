/*
CZERTAINLY Cert Manager

REST API for implementations of cert-manager issuer

API version: 2.13.1
Contact: info@czertainly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package czertainly

import (
	"encoding/json"
	"fmt"
)

// checks if the SimplifiedRaProfileDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimplifiedRaProfileDto{}

// SimplifiedRaProfileDto RA Profile associated to the Certificate
type SimplifiedRaProfileDto struct {
	// Object identifier
	Uuid string `json:"uuid"`
	// Object Name
	Name string `json:"name"`
	// Enabled flag - true = enabled; false = disabled
	Enabled bool `json:"enabled"`
	// Authority Instance UUID
	AuthorityInstanceUuid *string `json:"authorityInstanceUuid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SimplifiedRaProfileDto SimplifiedRaProfileDto

// NewSimplifiedRaProfileDto instantiates a new SimplifiedRaProfileDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimplifiedRaProfileDto(uuid string, name string, enabled bool) *SimplifiedRaProfileDto {
	this := SimplifiedRaProfileDto{}
	this.Uuid = uuid
	this.Name = name
	this.Enabled = enabled
	return &this
}

// NewSimplifiedRaProfileDtoWithDefaults instantiates a new SimplifiedRaProfileDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimplifiedRaProfileDtoWithDefaults() *SimplifiedRaProfileDto {
	this := SimplifiedRaProfileDto{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *SimplifiedRaProfileDto) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *SimplifiedRaProfileDto) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *SimplifiedRaProfileDto) SetUuid(v string) {
	o.Uuid = v
}

// GetName returns the Name field value
func (o *SimplifiedRaProfileDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SimplifiedRaProfileDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SimplifiedRaProfileDto) SetName(v string) {
	o.Name = v
}

// GetEnabled returns the Enabled field value
func (o *SimplifiedRaProfileDto) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *SimplifiedRaProfileDto) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *SimplifiedRaProfileDto) SetEnabled(v bool) {
	o.Enabled = v
}

// GetAuthorityInstanceUuid returns the AuthorityInstanceUuid field value if set, zero value otherwise.
func (o *SimplifiedRaProfileDto) GetAuthorityInstanceUuid() string {
	if o == nil || IsNil(o.AuthorityInstanceUuid) {
		var ret string
		return ret
	}
	return *o.AuthorityInstanceUuid
}

// GetAuthorityInstanceUuidOk returns a tuple with the AuthorityInstanceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedRaProfileDto) GetAuthorityInstanceUuidOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorityInstanceUuid) {
		return nil, false
	}
	return o.AuthorityInstanceUuid, true
}

// HasAuthorityInstanceUuid returns a boolean if a field has been set.
func (o *SimplifiedRaProfileDto) HasAuthorityInstanceUuid() bool {
	if o != nil && !IsNil(o.AuthorityInstanceUuid) {
		return true
	}

	return false
}

// SetAuthorityInstanceUuid gets a reference to the given string and assigns it to the AuthorityInstanceUuid field.
func (o *SimplifiedRaProfileDto) SetAuthorityInstanceUuid(v string) {
	o.AuthorityInstanceUuid = &v
}

func (o SimplifiedRaProfileDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimplifiedRaProfileDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uuid"] = o.Uuid
	toSerialize["name"] = o.Name
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.AuthorityInstanceUuid) {
		toSerialize["authorityInstanceUuid"] = o.AuthorityInstanceUuid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SimplifiedRaProfileDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"uuid",
		"name",
		"enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSimplifiedRaProfileDto := _SimplifiedRaProfileDto{}

	err = json.Unmarshal(data, &varSimplifiedRaProfileDto)

	if err != nil {
		return err
	}

	*o = SimplifiedRaProfileDto(varSimplifiedRaProfileDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "name")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "authorityInstanceUuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSimplifiedRaProfileDto struct {
	value *SimplifiedRaProfileDto
	isSet bool
}

func (v NullableSimplifiedRaProfileDto) Get() *SimplifiedRaProfileDto {
	return v.value
}

func (v *NullableSimplifiedRaProfileDto) Set(val *SimplifiedRaProfileDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSimplifiedRaProfileDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSimplifiedRaProfileDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimplifiedRaProfileDto(val *SimplifiedRaProfileDto) *NullableSimplifiedRaProfileDto {
	return &NullableSimplifiedRaProfileDto{value: val, isSet: true}
}

func (v NullableSimplifiedRaProfileDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimplifiedRaProfileDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


