/*
CZERTAINLY Cert Manager

REST API for implementations of cert-manager issuer

API version: 2.13.1
Contact: info@czertainly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package czertainly

import (
	"encoding/json"
	"fmt"
)

// checks if the ClientCertificateSignRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientCertificateSignRequestDto{}

// ClientCertificateSignRequestDto struct for ClientCertificateSignRequestDto
type ClientCertificateSignRequestDto struct {
	// List of attributes to create CSR. Required if CSR is not provided
	CsrAttributes []RequestAttributeDto `json:"csrAttributes,omitempty"`
	// List of attributes to sign the CSR
	SignatureAttributes []RequestAttributeDto `json:"signatureAttributes,omitempty"`
	// Certificate signing request encoded as Base64 string
	Request string `json:"request"`
	Format *CertificateRequestFormat `json:"format,omitempty"`
	// Token Profile UUID. Required if CSR is not uploaded
	TokenProfileUuid *string `json:"tokenProfileUuid,omitempty"`
	// Key UUID. Required if CSR is not uploaded
	KeyUuid *string `json:"keyUuid,omitempty"`
	// List of RA Profile related Attributes to issue Certificate
	Attributes []RequestAttributeDto `json:"attributes"`
	// List of Custom Attributes
	CustomAttributes []RequestAttributeDto `json:"customAttributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientCertificateSignRequestDto ClientCertificateSignRequestDto

// NewClientCertificateSignRequestDto instantiates a new ClientCertificateSignRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientCertificateSignRequestDto(request string, attributes []RequestAttributeDto) *ClientCertificateSignRequestDto {
	this := ClientCertificateSignRequestDto{}
	this.Request = request
	var format CertificateRequestFormat = CERTIFICATEREQUESTFORMAT_PKCS10
	this.Format = &format
	this.Attributes = attributes
	return &this
}

// NewClientCertificateSignRequestDtoWithDefaults instantiates a new ClientCertificateSignRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientCertificateSignRequestDtoWithDefaults() *ClientCertificateSignRequestDto {
	this := ClientCertificateSignRequestDto{}
	var format CertificateRequestFormat = CERTIFICATEREQUESTFORMAT_PKCS10
	this.Format = &format
	return &this
}

// GetCsrAttributes returns the CsrAttributes field value if set, zero value otherwise.
func (o *ClientCertificateSignRequestDto) GetCsrAttributes() []RequestAttributeDto {
	if o == nil || IsNil(o.CsrAttributes) {
		var ret []RequestAttributeDto
		return ret
	}
	return o.CsrAttributes
}

// GetCsrAttributesOk returns a tuple with the CsrAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateSignRequestDto) GetCsrAttributesOk() ([]RequestAttributeDto, bool) {
	if o == nil || IsNil(o.CsrAttributes) {
		return nil, false
	}
	return o.CsrAttributes, true
}

// HasCsrAttributes returns a boolean if a field has been set.
func (o *ClientCertificateSignRequestDto) HasCsrAttributes() bool {
	if o != nil && !IsNil(o.CsrAttributes) {
		return true
	}

	return false
}

// SetCsrAttributes gets a reference to the given []RequestAttributeDto and assigns it to the CsrAttributes field.
func (o *ClientCertificateSignRequestDto) SetCsrAttributes(v []RequestAttributeDto) {
	o.CsrAttributes = v
}

// GetSignatureAttributes returns the SignatureAttributes field value if set, zero value otherwise.
func (o *ClientCertificateSignRequestDto) GetSignatureAttributes() []RequestAttributeDto {
	if o == nil || IsNil(o.SignatureAttributes) {
		var ret []RequestAttributeDto
		return ret
	}
	return o.SignatureAttributes
}

// GetSignatureAttributesOk returns a tuple with the SignatureAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateSignRequestDto) GetSignatureAttributesOk() ([]RequestAttributeDto, bool) {
	if o == nil || IsNil(o.SignatureAttributes) {
		return nil, false
	}
	return o.SignatureAttributes, true
}

// HasSignatureAttributes returns a boolean if a field has been set.
func (o *ClientCertificateSignRequestDto) HasSignatureAttributes() bool {
	if o != nil && !IsNil(o.SignatureAttributes) {
		return true
	}

	return false
}

// SetSignatureAttributes gets a reference to the given []RequestAttributeDto and assigns it to the SignatureAttributes field.
func (o *ClientCertificateSignRequestDto) SetSignatureAttributes(v []RequestAttributeDto) {
	o.SignatureAttributes = v
}

// GetRequest returns the Request field value
func (o *ClientCertificateSignRequestDto) GetRequest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Request
}

// GetRequestOk returns a tuple with the Request field value
// and a boolean to check if the value has been set.
func (o *ClientCertificateSignRequestDto) GetRequestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Request, true
}

// SetRequest sets field value
func (o *ClientCertificateSignRequestDto) SetRequest(v string) {
	o.Request = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *ClientCertificateSignRequestDto) GetFormat() CertificateRequestFormat {
	if o == nil || IsNil(o.Format) {
		var ret CertificateRequestFormat
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateSignRequestDto) GetFormatOk() (*CertificateRequestFormat, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *ClientCertificateSignRequestDto) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given CertificateRequestFormat and assigns it to the Format field.
func (o *ClientCertificateSignRequestDto) SetFormat(v CertificateRequestFormat) {
	o.Format = &v
}

// GetTokenProfileUuid returns the TokenProfileUuid field value if set, zero value otherwise.
func (o *ClientCertificateSignRequestDto) GetTokenProfileUuid() string {
	if o == nil || IsNil(o.TokenProfileUuid) {
		var ret string
		return ret
	}
	return *o.TokenProfileUuid
}

// GetTokenProfileUuidOk returns a tuple with the TokenProfileUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateSignRequestDto) GetTokenProfileUuidOk() (*string, bool) {
	if o == nil || IsNil(o.TokenProfileUuid) {
		return nil, false
	}
	return o.TokenProfileUuid, true
}

// HasTokenProfileUuid returns a boolean if a field has been set.
func (o *ClientCertificateSignRequestDto) HasTokenProfileUuid() bool {
	if o != nil && !IsNil(o.TokenProfileUuid) {
		return true
	}

	return false
}

// SetTokenProfileUuid gets a reference to the given string and assigns it to the TokenProfileUuid field.
func (o *ClientCertificateSignRequestDto) SetTokenProfileUuid(v string) {
	o.TokenProfileUuid = &v
}

// GetKeyUuid returns the KeyUuid field value if set, zero value otherwise.
func (o *ClientCertificateSignRequestDto) GetKeyUuid() string {
	if o == nil || IsNil(o.KeyUuid) {
		var ret string
		return ret
	}
	return *o.KeyUuid
}

// GetKeyUuidOk returns a tuple with the KeyUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateSignRequestDto) GetKeyUuidOk() (*string, bool) {
	if o == nil || IsNil(o.KeyUuid) {
		return nil, false
	}
	return o.KeyUuid, true
}

// HasKeyUuid returns a boolean if a field has been set.
func (o *ClientCertificateSignRequestDto) HasKeyUuid() bool {
	if o != nil && !IsNil(o.KeyUuid) {
		return true
	}

	return false
}

// SetKeyUuid gets a reference to the given string and assigns it to the KeyUuid field.
func (o *ClientCertificateSignRequestDto) SetKeyUuid(v string) {
	o.KeyUuid = &v
}

// GetAttributes returns the Attributes field value
func (o *ClientCertificateSignRequestDto) GetAttributes() []RequestAttributeDto {
	if o == nil {
		var ret []RequestAttributeDto
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *ClientCertificateSignRequestDto) GetAttributesOk() ([]RequestAttributeDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *ClientCertificateSignRequestDto) SetAttributes(v []RequestAttributeDto) {
	o.Attributes = v
}

// GetCustomAttributes returns the CustomAttributes field value if set, zero value otherwise.
func (o *ClientCertificateSignRequestDto) GetCustomAttributes() []RequestAttributeDto {
	if o == nil || IsNil(o.CustomAttributes) {
		var ret []RequestAttributeDto
		return ret
	}
	return o.CustomAttributes
}

// GetCustomAttributesOk returns a tuple with the CustomAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateSignRequestDto) GetCustomAttributesOk() ([]RequestAttributeDto, bool) {
	if o == nil || IsNil(o.CustomAttributes) {
		return nil, false
	}
	return o.CustomAttributes, true
}

// HasCustomAttributes returns a boolean if a field has been set.
func (o *ClientCertificateSignRequestDto) HasCustomAttributes() bool {
	if o != nil && !IsNil(o.CustomAttributes) {
		return true
	}

	return false
}

// SetCustomAttributes gets a reference to the given []RequestAttributeDto and assigns it to the CustomAttributes field.
func (o *ClientCertificateSignRequestDto) SetCustomAttributes(v []RequestAttributeDto) {
	o.CustomAttributes = v
}

func (o ClientCertificateSignRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientCertificateSignRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CsrAttributes) {
		toSerialize["csrAttributes"] = o.CsrAttributes
	}
	if !IsNil(o.SignatureAttributes) {
		toSerialize["signatureAttributes"] = o.SignatureAttributes
	}
	toSerialize["request"] = o.Request
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.TokenProfileUuid) {
		toSerialize["tokenProfileUuid"] = o.TokenProfileUuid
	}
	if !IsNil(o.KeyUuid) {
		toSerialize["keyUuid"] = o.KeyUuid
	}
	toSerialize["attributes"] = o.Attributes
	if !IsNil(o.CustomAttributes) {
		toSerialize["customAttributes"] = o.CustomAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientCertificateSignRequestDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request",
		"attributes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClientCertificateSignRequestDto := _ClientCertificateSignRequestDto{}

	err = json.Unmarshal(data, &varClientCertificateSignRequestDto)

	if err != nil {
		return err
	}

	*o = ClientCertificateSignRequestDto(varClientCertificateSignRequestDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "csrAttributes")
		delete(additionalProperties, "signatureAttributes")
		delete(additionalProperties, "request")
		delete(additionalProperties, "format")
		delete(additionalProperties, "tokenProfileUuid")
		delete(additionalProperties, "keyUuid")
		delete(additionalProperties, "attributes")
		delete(additionalProperties, "customAttributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientCertificateSignRequestDto struct {
	value *ClientCertificateSignRequestDto
	isSet bool
}

func (v NullableClientCertificateSignRequestDto) Get() *ClientCertificateSignRequestDto {
	return v.value
}

func (v *NullableClientCertificateSignRequestDto) Set(val *ClientCertificateSignRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCertificateSignRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCertificateSignRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCertificateSignRequestDto(val *ClientCertificateSignRequestDto) *NullableClientCertificateSignRequestDto {
	return &NullableClientCertificateSignRequestDto{value: val, isSet: true}
}

func (v NullableClientCertificateSignRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCertificateSignRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


