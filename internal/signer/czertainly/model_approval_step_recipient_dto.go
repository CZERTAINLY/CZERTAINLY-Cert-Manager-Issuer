/*
CZERTAINLY Cert Manager

REST API for implementations of cert-manager issuer

API version: 2.14.2-SNAPSHOT
Contact: info@czertainly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package czertainly

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ApprovalStepRecipientDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalStepRecipientDto{}

// ApprovalStepRecipientDto struct for ApprovalStepRecipientDto
type ApprovalStepRecipientDto struct {
	// UUID of the approval recipient
	ApprovalRecipientUuid string `json:"approvalRecipientUuid"`
	// UUID of the recipient user
	UserUuid *string `json:"userUuid,omitempty"`
	// Username of the recipient
	Username *string `json:"username,omitempty"`
	// Creating date of the approval recipient
	CreatedAt time.Time `json:"createdAt"`
	// Resolution date of the approval recipient
	ClosedAt *time.Time `json:"closedAt,omitempty"`
	// Status of the approval recipient
	Status string `json:"status"`
	// Comment of the approval recipient
	Comment *string `json:"comment,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApprovalStepRecipientDto ApprovalStepRecipientDto

// NewApprovalStepRecipientDto instantiates a new ApprovalStepRecipientDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalStepRecipientDto(approvalRecipientUuid string, createdAt time.Time, status string) *ApprovalStepRecipientDto {
	this := ApprovalStepRecipientDto{}
	this.ApprovalRecipientUuid = approvalRecipientUuid
	this.CreatedAt = createdAt
	this.Status = status
	return &this
}

// NewApprovalStepRecipientDtoWithDefaults instantiates a new ApprovalStepRecipientDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalStepRecipientDtoWithDefaults() *ApprovalStepRecipientDto {
	this := ApprovalStepRecipientDto{}
	return &this
}

// GetApprovalRecipientUuid returns the ApprovalRecipientUuid field value
func (o *ApprovalStepRecipientDto) GetApprovalRecipientUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApprovalRecipientUuid
}

// GetApprovalRecipientUuidOk returns a tuple with the ApprovalRecipientUuid field value
// and a boolean to check if the value has been set.
func (o *ApprovalStepRecipientDto) GetApprovalRecipientUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApprovalRecipientUuid, true
}

// SetApprovalRecipientUuid sets field value
func (o *ApprovalStepRecipientDto) SetApprovalRecipientUuid(v string) {
	o.ApprovalRecipientUuid = v
}

// GetUserUuid returns the UserUuid field value if set, zero value otherwise.
func (o *ApprovalStepRecipientDto) GetUserUuid() string {
	if o == nil || IsNil(o.UserUuid) {
		var ret string
		return ret
	}
	return *o.UserUuid
}

// GetUserUuidOk returns a tuple with the UserUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalStepRecipientDto) GetUserUuidOk() (*string, bool) {
	if o == nil || IsNil(o.UserUuid) {
		return nil, false
	}
	return o.UserUuid, true
}

// HasUserUuid returns a boolean if a field has been set.
func (o *ApprovalStepRecipientDto) HasUserUuid() bool {
	if o != nil && !IsNil(o.UserUuid) {
		return true
	}

	return false
}

// SetUserUuid gets a reference to the given string and assigns it to the UserUuid field.
func (o *ApprovalStepRecipientDto) SetUserUuid(v string) {
	o.UserUuid = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ApprovalStepRecipientDto) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalStepRecipientDto) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ApprovalStepRecipientDto) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ApprovalStepRecipientDto) SetUsername(v string) {
	o.Username = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ApprovalStepRecipientDto) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ApprovalStepRecipientDto) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ApprovalStepRecipientDto) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetClosedAt returns the ClosedAt field value if set, zero value otherwise.
func (o *ApprovalStepRecipientDto) GetClosedAt() time.Time {
	if o == nil || IsNil(o.ClosedAt) {
		var ret time.Time
		return ret
	}
	return *o.ClosedAt
}

// GetClosedAtOk returns a tuple with the ClosedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalStepRecipientDto) GetClosedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClosedAt) {
		return nil, false
	}
	return o.ClosedAt, true
}

// HasClosedAt returns a boolean if a field has been set.
func (o *ApprovalStepRecipientDto) HasClosedAt() bool {
	if o != nil && !IsNil(o.ClosedAt) {
		return true
	}

	return false
}

// SetClosedAt gets a reference to the given time.Time and assigns it to the ClosedAt field.
func (o *ApprovalStepRecipientDto) SetClosedAt(v time.Time) {
	o.ClosedAt = &v
}

// GetStatus returns the Status field value
func (o *ApprovalStepRecipientDto) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ApprovalStepRecipientDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ApprovalStepRecipientDto) SetStatus(v string) {
	o.Status = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ApprovalStepRecipientDto) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalStepRecipientDto) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ApprovalStepRecipientDto) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ApprovalStepRecipientDto) SetComment(v string) {
	o.Comment = &v
}

func (o ApprovalStepRecipientDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalStepRecipientDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["approvalRecipientUuid"] = o.ApprovalRecipientUuid
	if !IsNil(o.UserUuid) {
		toSerialize["userUuid"] = o.UserUuid
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.ClosedAt) {
		toSerialize["closedAt"] = o.ClosedAt
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApprovalStepRecipientDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"approvalRecipientUuid",
		"createdAt",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApprovalStepRecipientDto := _ApprovalStepRecipientDto{}

	err = json.Unmarshal(data, &varApprovalStepRecipientDto)

	if err != nil {
		return err
	}

	*o = ApprovalStepRecipientDto(varApprovalStepRecipientDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "approvalRecipientUuid")
		delete(additionalProperties, "userUuid")
		delete(additionalProperties, "username")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "closedAt")
		delete(additionalProperties, "status")
		delete(additionalProperties, "comment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApprovalStepRecipientDto struct {
	value *ApprovalStepRecipientDto
	isSet bool
}

func (v NullableApprovalStepRecipientDto) Get() *ApprovalStepRecipientDto {
	return v.value
}

func (v *NullableApprovalStepRecipientDto) Set(val *ApprovalStepRecipientDto) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalStepRecipientDto) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalStepRecipientDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalStepRecipientDto(val *ApprovalStepRecipientDto) *NullableApprovalStepRecipientDto {
	return &NullableApprovalStepRecipientDto{value: val, isSet: true}
}

func (v NullableApprovalStepRecipientDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalStepRecipientDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


