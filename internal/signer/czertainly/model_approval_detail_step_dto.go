/*
CZERTAINLY Cert Manager

REST API for implementations of cert-manager issuer

API version: 2.14.2-SNAPSHOT
Contact: info@czertainly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package czertainly

import (
	"encoding/json"
	"fmt"
)

// checks if the ApprovalDetailStepDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalDetailStepDto{}

// ApprovalDetailStepDto struct for ApprovalDetailStepDto
type ApprovalDetailStepDto struct {
	// UUID of the responsible user to approve action in approval step
	UserUuid *string `json:"userUuid,omitempty"`
	// UUID of the responsible role of the users to approve action in approval step
	RoleUuid *string `json:"roleUuid,omitempty"`
	// UUID of the responsible group of the users to approve action in approval step
	GroupUuid *string `json:"groupUuid,omitempty"`
	// Description of the approval step
	Description *string `json:"description,omitempty"`
	// Order of the position in the approval steps flow
	Order int32 `json:"order"`
	// Count of the required approvals for the approval step, by default there is 1 approval needed.
	RequiredApprovals *int32 `json:"requiredApprovals,omitempty"`
	// UUID of the Approval step
	Uuid string `json:"uuid"`
	// Username of the responsible user to approve action in approval step
	Username *string `json:"username,omitempty"`
	// Name of the responsible role of the users to approve action in approval step
	RoleName *string `json:"roleName,omitempty"`
	// Name of the responsible group of the users to approve action in approval step
	GroupName *string `json:"groupName,omitempty"`
	// List of the approval recipient related for this step
	ApprovalStepRecipients []ApprovalStepRecipientDto `json:"approvalStepRecipients"`
	AdditionalProperties map[string]interface{}
}

type _ApprovalDetailStepDto ApprovalDetailStepDto

// NewApprovalDetailStepDto instantiates a new ApprovalDetailStepDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalDetailStepDto(order int32, uuid string, approvalStepRecipients []ApprovalStepRecipientDto) *ApprovalDetailStepDto {
	this := ApprovalDetailStepDto{}
	this.Order = order
	this.Uuid = uuid
	this.ApprovalStepRecipients = approvalStepRecipients
	return &this
}

// NewApprovalDetailStepDtoWithDefaults instantiates a new ApprovalDetailStepDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalDetailStepDtoWithDefaults() *ApprovalDetailStepDto {
	this := ApprovalDetailStepDto{}
	return &this
}

// GetUserUuid returns the UserUuid field value if set, zero value otherwise.
func (o *ApprovalDetailStepDto) GetUserUuid() string {
	if o == nil || IsNil(o.UserUuid) {
		var ret string
		return ret
	}
	return *o.UserUuid
}

// GetUserUuidOk returns a tuple with the UserUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetUserUuidOk() (*string, bool) {
	if o == nil || IsNil(o.UserUuid) {
		return nil, false
	}
	return o.UserUuid, true
}

// HasUserUuid returns a boolean if a field has been set.
func (o *ApprovalDetailStepDto) HasUserUuid() bool {
	if o != nil && !IsNil(o.UserUuid) {
		return true
	}

	return false
}

// SetUserUuid gets a reference to the given string and assigns it to the UserUuid field.
func (o *ApprovalDetailStepDto) SetUserUuid(v string) {
	o.UserUuid = &v
}

// GetRoleUuid returns the RoleUuid field value if set, zero value otherwise.
func (o *ApprovalDetailStepDto) GetRoleUuid() string {
	if o == nil || IsNil(o.RoleUuid) {
		var ret string
		return ret
	}
	return *o.RoleUuid
}

// GetRoleUuidOk returns a tuple with the RoleUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetRoleUuidOk() (*string, bool) {
	if o == nil || IsNil(o.RoleUuid) {
		return nil, false
	}
	return o.RoleUuid, true
}

// HasRoleUuid returns a boolean if a field has been set.
func (o *ApprovalDetailStepDto) HasRoleUuid() bool {
	if o != nil && !IsNil(o.RoleUuid) {
		return true
	}

	return false
}

// SetRoleUuid gets a reference to the given string and assigns it to the RoleUuid field.
func (o *ApprovalDetailStepDto) SetRoleUuid(v string) {
	o.RoleUuid = &v
}

// GetGroupUuid returns the GroupUuid field value if set, zero value otherwise.
func (o *ApprovalDetailStepDto) GetGroupUuid() string {
	if o == nil || IsNil(o.GroupUuid) {
		var ret string
		return ret
	}
	return *o.GroupUuid
}

// GetGroupUuidOk returns a tuple with the GroupUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetGroupUuidOk() (*string, bool) {
	if o == nil || IsNil(o.GroupUuid) {
		return nil, false
	}
	return o.GroupUuid, true
}

// HasGroupUuid returns a boolean if a field has been set.
func (o *ApprovalDetailStepDto) HasGroupUuid() bool {
	if o != nil && !IsNil(o.GroupUuid) {
		return true
	}

	return false
}

// SetGroupUuid gets a reference to the given string and assigns it to the GroupUuid field.
func (o *ApprovalDetailStepDto) SetGroupUuid(v string) {
	o.GroupUuid = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApprovalDetailStepDto) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApprovalDetailStepDto) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApprovalDetailStepDto) SetDescription(v string) {
	o.Description = &v
}

// GetOrder returns the Order field value
func (o *ApprovalDetailStepDto) GetOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *ApprovalDetailStepDto) SetOrder(v int32) {
	o.Order = v
}

// GetRequiredApprovals returns the RequiredApprovals field value if set, zero value otherwise.
func (o *ApprovalDetailStepDto) GetRequiredApprovals() int32 {
	if o == nil || IsNil(o.RequiredApprovals) {
		var ret int32
		return ret
	}
	return *o.RequiredApprovals
}

// GetRequiredApprovalsOk returns a tuple with the RequiredApprovals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetRequiredApprovalsOk() (*int32, bool) {
	if o == nil || IsNil(o.RequiredApprovals) {
		return nil, false
	}
	return o.RequiredApprovals, true
}

// HasRequiredApprovals returns a boolean if a field has been set.
func (o *ApprovalDetailStepDto) HasRequiredApprovals() bool {
	if o != nil && !IsNil(o.RequiredApprovals) {
		return true
	}

	return false
}

// SetRequiredApprovals gets a reference to the given int32 and assigns it to the RequiredApprovals field.
func (o *ApprovalDetailStepDto) SetRequiredApprovals(v int32) {
	o.RequiredApprovals = &v
}

// GetUuid returns the Uuid field value
func (o *ApprovalDetailStepDto) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *ApprovalDetailStepDto) SetUuid(v string) {
	o.Uuid = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ApprovalDetailStepDto) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ApprovalDetailStepDto) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ApprovalDetailStepDto) SetUsername(v string) {
	o.Username = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *ApprovalDetailStepDto) GetRoleName() string {
	if o == nil || IsNil(o.RoleName) {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetRoleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RoleName) {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *ApprovalDetailStepDto) HasRoleName() bool {
	if o != nil && !IsNil(o.RoleName) {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *ApprovalDetailStepDto) SetRoleName(v string) {
	o.RoleName = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *ApprovalDetailStepDto) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *ApprovalDetailStepDto) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *ApprovalDetailStepDto) SetGroupName(v string) {
	o.GroupName = &v
}

// GetApprovalStepRecipients returns the ApprovalStepRecipients field value
func (o *ApprovalDetailStepDto) GetApprovalStepRecipients() []ApprovalStepRecipientDto {
	if o == nil {
		var ret []ApprovalStepRecipientDto
		return ret
	}

	return o.ApprovalStepRecipients
}

// GetApprovalStepRecipientsOk returns a tuple with the ApprovalStepRecipients field value
// and a boolean to check if the value has been set.
func (o *ApprovalDetailStepDto) GetApprovalStepRecipientsOk() ([]ApprovalStepRecipientDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApprovalStepRecipients, true
}

// SetApprovalStepRecipients sets field value
func (o *ApprovalDetailStepDto) SetApprovalStepRecipients(v []ApprovalStepRecipientDto) {
	o.ApprovalStepRecipients = v
}

func (o ApprovalDetailStepDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalDetailStepDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserUuid) {
		toSerialize["userUuid"] = o.UserUuid
	}
	if !IsNil(o.RoleUuid) {
		toSerialize["roleUuid"] = o.RoleUuid
	}
	if !IsNil(o.GroupUuid) {
		toSerialize["groupUuid"] = o.GroupUuid
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["order"] = o.Order
	if !IsNil(o.RequiredApprovals) {
		toSerialize["requiredApprovals"] = o.RequiredApprovals
	}
	toSerialize["uuid"] = o.Uuid
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.RoleName) {
		toSerialize["roleName"] = o.RoleName
	}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	toSerialize["approvalStepRecipients"] = o.ApprovalStepRecipients

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApprovalDetailStepDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"order",
		"uuid",
		"approvalStepRecipients",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApprovalDetailStepDto := _ApprovalDetailStepDto{}

	err = json.Unmarshal(data, &varApprovalDetailStepDto)

	if err != nil {
		return err
	}

	*o = ApprovalDetailStepDto(varApprovalDetailStepDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "userUuid")
		delete(additionalProperties, "roleUuid")
		delete(additionalProperties, "groupUuid")
		delete(additionalProperties, "description")
		delete(additionalProperties, "order")
		delete(additionalProperties, "requiredApprovals")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "username")
		delete(additionalProperties, "roleName")
		delete(additionalProperties, "groupName")
		delete(additionalProperties, "approvalStepRecipients")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApprovalDetailStepDto struct {
	value *ApprovalDetailStepDto
	isSet bool
}

func (v NullableApprovalDetailStepDto) Get() *ApprovalDetailStepDto {
	return v.value
}

func (v *NullableApprovalDetailStepDto) Set(val *ApprovalDetailStepDto) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalDetailStepDto) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalDetailStepDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalDetailStepDto(val *ApprovalDetailStepDto) *NullableApprovalDetailStepDto {
	return &NullableApprovalDetailStepDto{value: val, isSet: true}
}

func (v NullableApprovalDetailStepDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalDetailStepDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


