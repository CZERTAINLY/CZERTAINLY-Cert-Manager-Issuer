/*
CZERTAINLY Cert Manager

REST API for implementations of cert-manager issuer

API version: 2.14.2-SNAPSHOT
Contact: info@czertainly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package czertainly

import (
	"encoding/json"
)

// checks if the ClientCertificateRekeyRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientCertificateRekeyRequestDto{}

// ClientCertificateRekeyRequestDto struct for ClientCertificateRekeyRequestDto
type ClientCertificateRekeyRequestDto struct {
	// True to replace renewed certificate in the associated locations
	ReplaceInLocations *bool `json:"replaceInLocations,omitempty"`
	// Certificate signing request encoded as Base64 string. If not provided, CSR attributes will be used
	Request *string `json:"request,omitempty"`
	// Certificate signing request format
	Format *CertificateRequestFormat `json:"format,omitempty"`
	// Key UUID
	KeyUuid *string `json:"keyUuid,omitempty"`
	// Token Profile UUID
	TokenProfileUuid *string `json:"tokenProfileUuid,omitempty"`
	// Signature Attributes. If not provided, existing attributes will be used to generate the new CSR
	SignatureAttributes []RequestAttributeDto `json:"signatureAttributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientCertificateRekeyRequestDto ClientCertificateRekeyRequestDto

// NewClientCertificateRekeyRequestDto instantiates a new ClientCertificateRekeyRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientCertificateRekeyRequestDto() *ClientCertificateRekeyRequestDto {
	this := ClientCertificateRekeyRequestDto{}
	var replaceInLocations bool = false
	this.ReplaceInLocations = &replaceInLocations
	return &this
}

// NewClientCertificateRekeyRequestDtoWithDefaults instantiates a new ClientCertificateRekeyRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientCertificateRekeyRequestDtoWithDefaults() *ClientCertificateRekeyRequestDto {
	this := ClientCertificateRekeyRequestDto{}
	var replaceInLocations bool = false
	this.ReplaceInLocations = &replaceInLocations
	return &this
}

// GetReplaceInLocations returns the ReplaceInLocations field value if set, zero value otherwise.
func (o *ClientCertificateRekeyRequestDto) GetReplaceInLocations() bool {
	if o == nil || IsNil(o.ReplaceInLocations) {
		var ret bool
		return ret
	}
	return *o.ReplaceInLocations
}

// GetReplaceInLocationsOk returns a tuple with the ReplaceInLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateRekeyRequestDto) GetReplaceInLocationsOk() (*bool, bool) {
	if o == nil || IsNil(o.ReplaceInLocations) {
		return nil, false
	}
	return o.ReplaceInLocations, true
}

// HasReplaceInLocations returns a boolean if a field has been set.
func (o *ClientCertificateRekeyRequestDto) HasReplaceInLocations() bool {
	if o != nil && !IsNil(o.ReplaceInLocations) {
		return true
	}

	return false
}

// SetReplaceInLocations gets a reference to the given bool and assigns it to the ReplaceInLocations field.
func (o *ClientCertificateRekeyRequestDto) SetReplaceInLocations(v bool) {
	o.ReplaceInLocations = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *ClientCertificateRekeyRequestDto) GetRequest() string {
	if o == nil || IsNil(o.Request) {
		var ret string
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateRekeyRequestDto) GetRequestOk() (*string, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *ClientCertificateRekeyRequestDto) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given string and assigns it to the Request field.
func (o *ClientCertificateRekeyRequestDto) SetRequest(v string) {
	o.Request = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *ClientCertificateRekeyRequestDto) GetFormat() CertificateRequestFormat {
	if o == nil || IsNil(o.Format) {
		var ret CertificateRequestFormat
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateRekeyRequestDto) GetFormatOk() (*CertificateRequestFormat, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *ClientCertificateRekeyRequestDto) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given CertificateRequestFormat and assigns it to the Format field.
func (o *ClientCertificateRekeyRequestDto) SetFormat(v CertificateRequestFormat) {
	o.Format = &v
}

// GetKeyUuid returns the KeyUuid field value if set, zero value otherwise.
func (o *ClientCertificateRekeyRequestDto) GetKeyUuid() string {
	if o == nil || IsNil(o.KeyUuid) {
		var ret string
		return ret
	}
	return *o.KeyUuid
}

// GetKeyUuidOk returns a tuple with the KeyUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateRekeyRequestDto) GetKeyUuidOk() (*string, bool) {
	if o == nil || IsNil(o.KeyUuid) {
		return nil, false
	}
	return o.KeyUuid, true
}

// HasKeyUuid returns a boolean if a field has been set.
func (o *ClientCertificateRekeyRequestDto) HasKeyUuid() bool {
	if o != nil && !IsNil(o.KeyUuid) {
		return true
	}

	return false
}

// SetKeyUuid gets a reference to the given string and assigns it to the KeyUuid field.
func (o *ClientCertificateRekeyRequestDto) SetKeyUuid(v string) {
	o.KeyUuid = &v
}

// GetTokenProfileUuid returns the TokenProfileUuid field value if set, zero value otherwise.
func (o *ClientCertificateRekeyRequestDto) GetTokenProfileUuid() string {
	if o == nil || IsNil(o.TokenProfileUuid) {
		var ret string
		return ret
	}
	return *o.TokenProfileUuid
}

// GetTokenProfileUuidOk returns a tuple with the TokenProfileUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateRekeyRequestDto) GetTokenProfileUuidOk() (*string, bool) {
	if o == nil || IsNil(o.TokenProfileUuid) {
		return nil, false
	}
	return o.TokenProfileUuid, true
}

// HasTokenProfileUuid returns a boolean if a field has been set.
func (o *ClientCertificateRekeyRequestDto) HasTokenProfileUuid() bool {
	if o != nil && !IsNil(o.TokenProfileUuid) {
		return true
	}

	return false
}

// SetTokenProfileUuid gets a reference to the given string and assigns it to the TokenProfileUuid field.
func (o *ClientCertificateRekeyRequestDto) SetTokenProfileUuid(v string) {
	o.TokenProfileUuid = &v
}

// GetSignatureAttributes returns the SignatureAttributes field value if set, zero value otherwise.
func (o *ClientCertificateRekeyRequestDto) GetSignatureAttributes() []RequestAttributeDto {
	if o == nil || IsNil(o.SignatureAttributes) {
		var ret []RequestAttributeDto
		return ret
	}
	return o.SignatureAttributes
}

// GetSignatureAttributesOk returns a tuple with the SignatureAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCertificateRekeyRequestDto) GetSignatureAttributesOk() ([]RequestAttributeDto, bool) {
	if o == nil || IsNil(o.SignatureAttributes) {
		return nil, false
	}
	return o.SignatureAttributes, true
}

// HasSignatureAttributes returns a boolean if a field has been set.
func (o *ClientCertificateRekeyRequestDto) HasSignatureAttributes() bool {
	if o != nil && !IsNil(o.SignatureAttributes) {
		return true
	}

	return false
}

// SetSignatureAttributes gets a reference to the given []RequestAttributeDto and assigns it to the SignatureAttributes field.
func (o *ClientCertificateRekeyRequestDto) SetSignatureAttributes(v []RequestAttributeDto) {
	o.SignatureAttributes = v
}

func (o ClientCertificateRekeyRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientCertificateRekeyRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReplaceInLocations) {
		toSerialize["replaceInLocations"] = o.ReplaceInLocations
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.KeyUuid) {
		toSerialize["keyUuid"] = o.KeyUuid
	}
	if !IsNil(o.TokenProfileUuid) {
		toSerialize["tokenProfileUuid"] = o.TokenProfileUuid
	}
	if !IsNil(o.SignatureAttributes) {
		toSerialize["signatureAttributes"] = o.SignatureAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientCertificateRekeyRequestDto) UnmarshalJSON(data []byte) (err error) {
	varClientCertificateRekeyRequestDto := _ClientCertificateRekeyRequestDto{}

	err = json.Unmarshal(data, &varClientCertificateRekeyRequestDto)

	if err != nil {
		return err
	}

	*o = ClientCertificateRekeyRequestDto(varClientCertificateRekeyRequestDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "replaceInLocations")
		delete(additionalProperties, "request")
		delete(additionalProperties, "format")
		delete(additionalProperties, "keyUuid")
		delete(additionalProperties, "tokenProfileUuid")
		delete(additionalProperties, "signatureAttributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientCertificateRekeyRequestDto struct {
	value *ClientCertificateRekeyRequestDto
	isSet bool
}

func (v NullableClientCertificateRekeyRequestDto) Get() *ClientCertificateRekeyRequestDto {
	return v.value
}

func (v *NullableClientCertificateRekeyRequestDto) Set(val *ClientCertificateRekeyRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCertificateRekeyRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCertificateRekeyRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCertificateRekeyRequestDto(val *ClientCertificateRekeyRequestDto) *NullableClientCertificateRekeyRequestDto {
	return &NullableClientCertificateRekeyRequestDto{value: val, isSet: true}
}

func (v NullableClientCertificateRekeyRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCertificateRekeyRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


